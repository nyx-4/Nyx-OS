#ifndef _STRING_
#define _STRING_ 1

#include <stddef.h>
#include <string.h>
#include <sys/cdefs.h>
namespace std {
class string {
  private:
    char Str[100];

  public:
    string(const char *str);
    string(string &str);

    string     &operator=(std::string str);
    string      operator+(std::string str) const;
    string     &operator+=(std::string str);
    string     &operator+=(char ch);
    string      operator*(int times) const;
    string     &operator*=(int times);
    char       &operator[](int idx);
    const char &operator[](int idx) const;

    // Comparison operators
    bool operator<=(string str) const;
    bool operator==(string str) const;
    bool operator!=(string str) const;
    bool operator<(string str) const;
    bool operator>=(string str) const;
    bool operator>(string str) const;

    // Comparison operators
    bool operator<=(const char *str) const;
    bool operator==(const char *str) const;
    bool operator!=(const char *str) const;
    bool operator<(const char *str) const;
    bool operator>=(const char *str) const;
    bool operator>(const char *str) const;

    operator const char *();
};
} // namespace std

long        strtol(std::string s);
std::string ltostr(long s);
void        swap(char &a, char &b);
std::string strrev(std::string s);

#endif
